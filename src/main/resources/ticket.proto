syntax = "proto2";
option java_multiple_files = true;

package ticktrack.proto;

//SUPPORTING MESSAGES
message CommonResponse {
    enum ResponseType {
        Success = 1;
        Failure = 2;
    }
    required string responseText = 1;
    required ResponseType responseType = 2;
}

message Comment {
    required int64 time = 1;
    required string username = 2;
    required string text = 3;
}

message TicketInfo {
    required int64 ticketID = 1;
    required string summary = 2;
    required string description = 3;
    required string priority = 4;
    required string category = 5;
    required string creator = 6;
    required string status = 7;
    required int64 openDate = 8;
    optional string assignee = 9;
    optional string resolution = 10;
    optional int64 closeDate = 11;
    optional string deadline = 12;
    repeated Comment comment = 13;
}
//SUPPORTING MESSAGES END

//TICKET OPERATIONS
message TicketOp {
    required int64 time = 1;
    required string sender = 2;

    oneof msg {
        TicketOpCreateRequest ticketOpCreateRequest = 11;
        TicketOpUpdateRequest ticketOpUpdateRequest = 12;
        TicketOpAddComment ticketOpAddComment = 13;
        TicketOpGetRequest ticketOpGetRequest = 14;
        TicketOpGetResponse ticketOpGetResponse = 15;
        CommonResponse commonResponse = 16;
    }

    message TicketOpCreateRequest {
        required string summary = 1;
        required string description = 2;
        required string priority = 3;
        required string category = 4;
        optional string assignee = 5;
        optional string deadline = 6;
    }

    message TicketOpUpdateRequest {
        enum ParameterName {
            Summary = 1;
            Description = 2;
            Priority = 3;
            Assignee = 4;
            Category = 6;
            Status = 7;
            Resolution = 8;
            Deadline = 9;
        }

        required int64 ticketID = 1;
        required ParameterName paramName = 2;
        required string value = 3;
    }

    message TicketOpAddComment {
        required int64 ticket_id = 1;
        required Comment newComment = 2;
    }

    message TicketOpGetRequest {
        required int64 ticket_id = 1;
    }

    message TicketOpGetResponse {
        required TicketInfo ticketInfo = 1;
    }
}
//TICKET OPERATIONS END

//SEARCH OPERATIONS
message SearchOp {
    required int64 time = 1;
    required string sender = 2;

    oneof msg {
        SearchOpRequest searchOpRequest = 11;
        SearchOpResponse searchOpResponse = 12;
    }

    message SearchOpRequest {
        repeated SearchCriteria searchCriteria = 1;

        message SearchCriteria {
            enum Criteria {
                ticketID = 1;
                summary = 2;
                description = 3;
                priority = 4;
                category = 5;
                creator = 6;
                status = 7;
                openDate = 8;
                assignee = 9;
                resolution = 10;
                closeDate = 11;
                deadline = 12;
            }

            required Criteria criteria = 1;
            repeated string value = 2;
        }
    }

    message SearchOpResponse {
        repeated TicketInfo ticketInfo = 1;
    }
}
//SEARCH OPERATIONS END