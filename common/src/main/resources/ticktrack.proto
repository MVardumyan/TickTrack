syntax = "proto2";
option java_multiple_files = true;

package ticktrack.proto;

//MAIN MESSAGE
message Msg {

    oneof MessageType {
        CommonResponse commonResponse = 100;
        LoginRequest loginRequest = 101;
        UserOp userOperation = 102;
        UserGroupOp userGroupOperation = 103;
        TicketOp ticketOperation = 104;
        SearchOp searchOperation = 105;
        CategoryOp categoryOperation = 106;
        Comment comment = 107;
        TicketInfo ticketInfo = 108;
    }

    //SUPPORTING ENUMS AND MESSAGES
    enum TicketPriority {
        Low = 1;
        Medium = 2;
        High = 3;
        Critical = 4;
    }

    enum TicketStatus {
        Open = 1;
        Assigned = 2;
        InProgress = 3;
        Resolved = 4;
        Canceled = 5;
        Closed = 6;
    }

    enum UserRole {
        Admin = 1;
        BusinessUser = 2;
        RegularUser = 3;
    }

    message CommonResponse {
        enum ResponseType {
            Success = 1;
            Failure = 2;
        }
        required string responseText = 1;
        required ResponseType responseType = 2;
    }

    message Comment {
        required int64 time = 1;
        required string username = 2;
        required string text = 3;
    }

    message TicketInfo {
        required int64 ticketID = 1;
        required string summary = 2;
        required string description = 3;
        required TicketPriority priority = 4;
        required string category = 5;
        required string creator = 6;
        required TicketStatus status = 7;
        required int64 openDate = 8;
        optional string assignee = 9;
        optional string resolution = 10;
        optional int64 closeDate = 11;
        optional int64 deadline = 12;
        repeated Comment comment = 13;
        optional string group = 14;
    }
    //SUPPORTING ENUMS AND MESSAGES END

    //TICKET OPERATIONS
    message TicketOp {

        oneof msg {
            TicketOpCreateRequest ticketOpCreateRequest = 11;
            TicketOpUpdateRequest ticketOpUpdateRequest = 12;
            TicketOpAddComment ticketOpAddComment = 13;
            TicketOpGetResponse ticketOpGetResponse = 15;
            CommonResponse commonResponse = 16;
        }

        message TicketOpCreateRequest {
            required string summary = 1;
            required string description = 2;
            required string priority = 3;
            required string category = 4;
            optional string assignee = 5;
            optional int64 deadline = 6;
        }

        message TicketOpUpdateRequest {
            required int64 ticketID = 1;
            optional string summary = 2;
            optional string description = 3;
            optional TicketPriority priority = 4;
            optional string category = 5;
            optional string assignee = 6;
            optional int64 deadline = 7;
            optional TicketStatus status = 8;
            optional string resolution = 9;
        }

        message TicketOpAddComment {
            required int64 ticket_id = 1;
            required Comment newComment = 2;
        }

        message TicketOpGetResponse {
            required TicketInfo ticketInfo = 1;
        }
    }
    //TICKET OPERATIONS END

    //SEARCH OPERATIONS
    message SearchOp {

        oneof msg {
            SearchOpRequest searchOpRequest = 11;
            SearchOpResponse searchOpResponse = 12;
        }

        message SearchOpRequest {
            repeated int64 ticket_id = 1;
            optional string summaryOrDescription = 2;
            optional string creator = 3;
            repeated TicketPriority priority = 4;
            repeated string category = 5;
            optional string assignee = 6;
            optional int64 deadlineStart = 7;
            optional int64 deadlineEnd = 12;
            repeated TicketStatus status = 8;
            optional string resolution = 9;
            optional int64 openDateStart = 10;
            optional int64 openDateEnd = 11;
            optional int64 closeDateStart = 13;
            optional int64 closeDateEnd = 14;
            optional string group = 15;
        }

        message SearchOpResponse {
            repeated TicketInfo ticketInfo = 1;
        }
    }
    //SEARCH OPERATIONS END

    //LOGIN MESSAGE
    message LoginRequest {
        required string username = 1;
        required string password = 2;
    }
    //LOGIN MESSAGE END

    //USER OPERATIONS
    message UserOp {
        oneof msg {
            UserOpCreateRequest userOpCreateRequest = 11;
            CommonResponse userOpCommonResponse = 12;
            UserOpUpdateRequest userOpUpdateRequest = 13;
            UserOpChangePassword userOpChangePassword = 14;
            UserOpChangeRole userOpChangeRole = 15;
            UserOpDeactivateRequest userOpDeactivate = 16;
            UserOpGetByCriteriaRequest userOpGetByCriteria = 18;
            UserOpGetResponse userOpGetResponse = 19;
        }

        message UserOpCreateRequest {
            required string username = 1;
            required string firstname = 2;
            required string lastname = 3;
            required string email = 4;
            required string password = 5;
            required UserRole role = 6;
        }

        message UserOpUpdateRequest {
            required string username = 1;
            optional string firstName = 2;
            optional string lastName = 3;
            optional string email = 4;
        }

        message UserOpChangePassword {
            required string username = 1;
            required string oldPassword = 2;
            required string newPassword = 3;
        }

        message UserOpChangeRole {
            required string username = 1;
            required UserRole newRole = 2;
        }

        message UserOpDeactivateRequest {
            required string username = 1;
        }

        message UserOpGetByCriteriaRequest {
            enum Criteria {
                Admin = 1;
                BusinessUser = 2;
                RegularUser = 3;
                All = 4;
            }

            required Criteria criteria = 1;
        }

        message UserOpGetResponse {
            repeated UserInfo userInfo = 1;

            message UserInfo {
                required string username = 1;
                required string firstname = 2;
                required string lastname = 3;
                required string email = 4;
                required UserRole role = 6;
                required bool isActive = 7;
                optional string group = 8;
            }
        }

    }
    //USER OPERATIONS END

    //USER GROUP OPERATIONS
    message UserGroupOp {

        oneof msg {
            UserGroupOpUpdateRequest userGroupOpUpdateRequest = 12;
            UserGroupOpGetAllRequest userGroupOpGetAllRequest = 13;
            UserGroupOpGetAllResponse userGroupOpGetAllResponse = 14;
            CommonResponse commonResponse = 15;
        }

        message UserGroupOpUpdateRequest {
            required string oldName = 1;
            required string newName = 2;
        }

        message UserGroupOpGetAllRequest {
        }

        message UserGroupOpGetAllResponse {
            repeated string groupName = 1;
        }
    }
    //USER GROUP OPERATIONS END

    //CATEGORY OPERATIONS
    message CategoryOp {
        required int64 time = 1;
        required string sender = 2;

        oneof msg {
            CategoryOpUpdateRequest categoryOpUpdateRequest = 12;
            CategoryOpGetAllRequest categoryOpGetAllRequest = 13;
            CategoryOpGetAllResponse categoryOpGetAllResponse = 14;
            CommonResponse commonResponse = 15;
        }

        message CategoryOpUpdateRequest {
            required string oldName = 1;
            required string newName = 2;
        }

        message CategoryOpGetAllRequest {
        }

        message CategoryOpGetAllResponse {
            repeated string categoryName = 1;
        }
    }
    //CATEGORY OPERATIONS END
}
//MAIN MESSAGE END